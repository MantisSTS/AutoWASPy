[
  {
    "id": "V1.1.1",
    "title": "input is decoded or unescaped into...",
    "description": "Verify that input is decoded or unescaped into a canonical form only once, it is only decoded when encoded data in that form is expected, and that this is done before processing the input further, for example it is not performed after input validation or sanitization",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V1.1.2",
    "title": "the application performs output encoding and...",
    "description": "Verify that the application performs output encoding and escaping either as a final step before being used by the interpreter for which it is intended or by the interpreter itself",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V1.2.1",
    "title": "output encoding for an HTTP response,...",
    "description": "Verify that output encoding for an HTTP response, HTML document, or XML document is relevant for the context required, such as encoding the relevant characters for HTML elements, HTML attributes, HTML comments, CSS, or HTTP header fields, to avoid changing the message or document structure",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V1.2.2",
    "title": "when dynamically building URLs, untrusted data...",
    "description": "Verify that when dynamically building URLs, untrusted data is encoded according to its context (e.g., URL encoding or base64url encoding for query or path parameters). Ensure that only safe URL protocols are permitted (e.g., disallow javascript: or data:)",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V1.2.3",
    "title": "output encoding or escaping is used...",
    "description": "Verify that output encoding or escaping is used when dynamically building JavaScript content (including JSON), to avoid changing the message or document structure (to avoid JavaScript and JSON injection)",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods. Test for SQL injection using various payload techniques."
  },
  {
    "id": "V1.2.4",
    "title": "data selection or database queries (e.g.,...",
    "description": "Verify that data selection or database queries (e.g., SQL, HQL, NoSQL, Cypher) use parameterized queries, ORMs, entity frameworks, or are otherwise protected from SQL Injection and other database injection attacks. This is also relevant when writing stored procedures",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods. Test for SQL injection using various payload techniques."
  },
  {
    "id": "V1.2.5",
    "title": "the application protects against OS command...",
    "description": "Verify that the application protects against OS command injection and that operating system calls use parameterized OS queries or use contextual command line output encoding",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods. Test for SQL injection using various payload techniques."
  },
  {
    "id": "V1.2.6",
    "title": "the application protects against LDAP injection...",
    "description": "Verify that the application protects against LDAP injection vulnerabilities, or that specific security controls to prevent LDAP injection have been implemented",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Test for SQL injection using various payload techniques."
  },
  {
    "id": "V1.2.7",
    "title": "the application is protected against XPath...",
    "description": "Verify that the application is protected against XPath injection attacks by using query parameterization or precompiled queries",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Test for SQL injection using various payload techniques."
  },
  {
    "id": "V1.2.8",
    "title": "LaTeX processors are configured securely (such...",
    "description": "Verify that LaTeX processors are configured securely (such as not using the \"--shell-escape\" flag) and an allowlist of commands is used to prevent LaTeX injection attacks",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Test for SQL injection using various payload techniques."
  },
  {
    "id": "V1.2.9",
    "title": "the application escapes special characters in...",
    "description": "Verify that the application escapes special characters in regular expressions (typically using a backslash) to prevent them from being misinterpreted as metacharacters",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V1.2.10",
    "title": "the application is protected against CSV...",
    "description": "Verify that the application is protected against CSV and Formula Injection. The application must follow the escaping rules defined in RFC 4180 sections 2.6 and 2.7 when exporting CSV content. Additionally, when exporting to CSV or other spreadsheet formats (such as XLS, XLSX, or ODF), special characters (including '=', '+', '-', '@', '\\t' (tab), and '\\0' (null character)) must be escaped with a single quote if they appear as the first character in a field value",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test the security control through appropriate verification methods. Test for SQL injection using various payload techniques."
  },
  {
    "id": "V1.3.1",
    "title": "all untrusted HTML input from WYSIWYG...",
    "description": "Verify that all untrusted HTML input from WYSIWYG editors or similar is sanitized using a well-known and secure HTML sanitization library or framework feature",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V1.3.2",
    "title": "the application avoids the use of...",
    "description": "Verify that the application avoids the use of eval() or other dynamic code execution features such as Spring Expression Language (SpEL). Where there is no alternative, any user input being included must be sanitized before being executed",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V1.3.3",
    "title": "data being passed to a potentially...",
    "description": "Verify that data being passed to a potentially dangerous context is sanitized beforehand to enforce safety measures, such as only allowing characters which are safe for this context and trimming input which is too long",
    "category": "Architecture & Design",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.1.1",
    "title": "the application's documentation defines input validation...",
    "description": "Verify that the application's documentation defines input validation rules for how to check the validity of data items against an expected structure. This could be common data formats such as credit card numbers, email addresses, telephone numbers, or it could be an internal data format",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.1.2",
    "title": "the application's documentation defines how to...",
    "description": "Verify that the application's documentation defines how to validate the logical and contextual consistency of combined data items, such as checking that suburb and ZIP code match",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.1.3",
    "title": "expectations for business logic limits and...",
    "description": "Verify that expectations for business logic limits and validations are documented, including both per-user and globally across the application",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.2.1",
    "title": "input is validated to enforce business...",
    "description": "Verify that input is validated to enforce business or functional expectations for that input. This should either use positive validation against an allow list of values, patterns, and ranges, or be based on comparing the input to an expected structure and logical limits according to predefined rules. For L1, this can focus on input which is used to make specific business or security decisions. For L2 and up, this should apply to all input",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.2.2",
    "title": "the application is designed to enforce...",
    "description": "Verify that the application is designed to enforce input validation at a trusted service layer. While client-side validation improves usability and should be encouraged, it must not be relied upon as a security control",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.2.3",
    "title": "the application ensures that combinations of...",
    "description": "Verify that the application ensures that combinations of related data items are reasonable according to the pre-defined rules",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.3.1",
    "title": "the application will only process business...",
    "description": "Verify that the application will only process business logic flows for the same user in the expected sequential step order and without skipping steps",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.3.2",
    "title": "business logic limits are implemented per...",
    "description": "Verify that business logic limits are implemented per the application's documentation to avoid business logic flaws being exploited",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.3.3",
    "title": "transactions are being used at the...",
    "description": "Verify that transactions are being used at the business logic level such that either a business logic operation succeeds in its entirety or it is rolled back to the previous correct state",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.3.4",
    "title": "business logic level locking mechanisms are...",
    "description": "Verify that business logic level locking mechanisms are used to ensure that limited quantity resources (such as theater seats or delivery slots) cannot be double-booked by manipulating the application's logic",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.3.5",
    "title": "high-value business logic flows require multi-user...",
    "description": "Verify that high-value business logic flows require multi-user approval to prevent unauthorized or accidental actions. This could include but is not limited to large monetary transfers, contract approvals, access to classified information, or safety overrides in manufacturing",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.4.1",
    "title": "anti-automation controls are in place to...",
    "description": "Verify that anti-automation controls are in place to protect against excessive calls to application functions that could lead to data exfiltration, garbage-data creation, quota exhaustion, rate-limit breaches, denial-of-service, or overuse of costly resources",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V2.4.2",
    "title": "business logic flows require realistic human...",
    "description": "Verify that business logic flows require realistic human timing, preventing excessively rapid transaction submissions",
    "category": "Input Validation & Business Logic",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V3.1.1",
    "title": "application documentation states the expected security...",
    "description": "Verify that application documentation states the expected security features that browsers using the application must support (such as HTTPS, HTTP Strict Transport Security (HSTS), Content Security Policy (CSP), and other relevant HTTP security mechanisms). It must also define how the application must behave when some of these features are not available (such as warning the user or blocking access)",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.2.1",
    "title": "security controls are in place to...",
    "description": "Verify that security controls are in place to prevent browsers from rendering content or functionality in HTTP responses in an incorrect context (e.g., when an API, a user-uploaded file or other resource is requested directly). Possible controls could include: not serving the content unless HTTP request header fields (such as Sec-Fetch-\\*) indicate it is the correct context, using the sandbox directive of the Content-Security-Policy header field or using the attachment disposition type in the Content-Disposition header field",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.2.2",
    "title": "content intended to be displayed as...",
    "description": "Verify that content intended to be displayed as text, rather than rendered as HTML, is handled using safe rendering functions (such as createTextNode or textContent) to prevent unintended execution of content such as HTML or JavaScript",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.2.3",
    "title": "the application avoids DOM clobbering when...",
    "description": "Verify that the application avoids DOM clobbering when using client-side JavaScript by employing explicit variable declarations, performing strict type checking, avoiding storing global variables on the document object, and implementing namespace isolation",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.3.1",
    "title": "cookies have the 'Secure' attribute set,...",
    "description": "Verify that cookies have the 'Secure' attribute set, and if the '\\__Host-' prefix is not used for the cookie name, the '__Secure-' prefix must be used for the cookie name",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.3.2",
    "title": "each cookie's 'SameSite' attribute value is...",
    "description": "Verify that each cookie's 'SameSite' attribute value is set according to the purpose of the cookie, to limit exposure to user interface redress attacks and browser-based request forgery attacks, commonly known as cross-site request forgery (CSRF)",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities. Test for XSS vulnerabilities using reflected, stored, and DOM-based techniques."
  },
  {
    "id": "V3.3.3",
    "title": "cookies have the '__Host-' prefix for...",
    "description": "Verify that cookies have the '__Host-' prefix for the cookie name unless they are explicitly designed to be shared with other hosts",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.3.4",
    "title": "if the value of a cookie...",
    "description": "Verify that if the value of a cookie is not meant to be accessible to client-side scripts (such as a session token), the cookie must have the 'HttpOnly' attribute set and the same value (e. g. session token) must only be transferred to the client via the 'Set-Cookie' header field",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V3.3.5",
    "title": "when the application writes a cookie,...",
    "description": "Verify that when the application writes a cookie, the cookie name and value length combined are not over 4096 bytes. Overly large cookies will not be stored by the browser and therefore not sent with requests, preventing the user from using application functionality which relies on that cookie",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.4.1",
    "title": "a Strict-Transport-Security header field is included...",
    "description": "Verify that a Strict-Transport-Security header field is included on all responses to enforce an HTTP Strict Transport Security (HSTS) policy. A maximum age of at least 1 year must be defined, and for L2 and up, the policy must apply to all subdomains as well",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.4.2",
    "title": "the Cross-Origin Resource Sharing (CORS) Access-Control-Allow-Origin...",
    "description": "Verify that the Cross-Origin Resource Sharing (CORS) Access-Control-Allow-Origin header field is a fixed value by the application, or if the Origin HTTP request header field value is used, it is validated against an allowlist of trusted origins. When 'Access-Control-Allow-Origin: *' needs to be used, verify that the response does not include any sensitive information",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.4.3",
    "title": "HTTP responses include a Content-Security-Policy response...",
    "description": "Verify that HTTP responses include a Content-Security-Policy response header field which defines directives to ensure the browser only loads and executes trusted content or resources, in order to limit execution of malicious JavaScript. As a minimum, a global policy must be used which includes the directives object-src 'none' and base-uri 'none' and defines either an allowlist or uses nonces or hashes. For an L3 application, a per-response policy with nonces or hashes must be defined",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.4.4",
    "title": "all HTTP responses contain an 'X-Content-Type-Options:...",
    "description": "Verify that all HTTP responses contain an 'X-Content-Type-Options: nosniff' header field. This instructs browsers not to use content sniffing and MIME type guessing for the given response, and to require the response's Content-Type header field value to match the destination resource. For example, the response to a request for a style is only accepted if the response's Content-Type is 'text/css'. This also enables the use of the Cross-Origin Read Blocking (CORB) functionality by the browser",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.4.5",
    "title": "the application sets a referrer policy...",
    "description": "Verify that the application sets a referrer policy to prevent leakage of technically sensitive data to third-party services via the 'Referer' HTTP request header field. This can be done using the Referrer-Policy HTTP response header field or via HTML element attributes. Sensitive data could include path and query data in the URL, and for internal non-public applications also the hostname",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V3.4.6",
    "title": "the web application uses the frame-ancestors...",
    "description": "Verify that the web application uses the frame-ancestors directive of the Content-Security-Policy header field for every HTTP response to ensure that it cannot be embedded by default and that embedding of specific resources is allowed only when necessary. Note that the X-Frame-Options header field, although supported by browsers, is obsolete and may not be relied upon",
    "category": "Web Frontend Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test frontend security by examining client-side controls, DOM manipulation, and XSS vulnerabilities."
  },
  {
    "id": "V4.1.1",
    "title": "every HTTP response with a message...",
    "description": "Verify that every HTTP response with a message body contains a Content-Type header field that matches the actual content of the response, including the charset parameter to specify safe character encoding (e.g., UTF-8, ISO-8859-1) according to IANA Media Types, such as \"text/\", \"/+xml\" and \"/xml\"",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.1.2",
    "title": "only user-facing endpoints (intended for manual...",
    "description": "Verify that only user-facing endpoints (intended for manual web-browser access) automatically redirect from HTTP to HTTPS, while other services or endpoints do not implement transparent redirects. This is to avoid a situation where a client is erroneously sending unencrypted HTTP requests, but since the requests are being automatically redirected to HTTPS, the leakage of sensitive data goes undiscovered",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.1.3",
    "title": "any HTTP header field used by...",
    "description": "Verify that any HTTP header field used by the application and set by an intermediary layer, such as a load balancer, a web proxy, or a backend-for-frontend service, cannot be overridden by the end-user. Example headers might include X-Real-IP, X-Forwarded-*, or X-User-ID",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.1.4",
    "title": "only HTTP methods that are explicitly...",
    "description": "Verify that only HTTP methods that are explicitly supported by the application or its API (including OPTIONS during preflight requests) can be used and that unused methods are blocked",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.1.5",
    "title": "per-message digital signatures are used to...",
    "description": "Verify that per-message digital signatures are used to provide additional assurance on top of transport protections for requests or transactions which are highly sensitive or which traverse a number of systems",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.2.1",
    "title": "all application components (including load balancers,...",
    "description": "Verify that all application components (including load balancers, firewalls, and application servers) determine boundaries of incoming HTTP messages using the appropriate mechanism for the HTTP version to prevent HTTP request smuggling. In HTTP/1.x, if a Transfer-Encoding header field is present, the Content-Length header must be ignored per RFC 2616. When using HTTP/2 or HTTP/3, if a Content-Length header field is present, the receiver must ensure that it is consistent with the length of the DATA frames",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.2.2",
    "title": "when generating HTTP messages, the Content-Length...",
    "description": "Verify that when generating HTTP messages, the Content-Length header field does not conflict with the length of the content as determined by the framing of the HTTP protocol, in order to prevent request smuggling attacks",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.2.3",
    "title": "the application does not send nor...",
    "description": "Verify that the application does not send nor accept HTTP/2 or HTTP/3 messages with connection-specific header fields such as Transfer-Encoding to prevent response splitting and header injection attacks",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting. Test for SQL injection using various payload techniques."
  },
  {
    "id": "V4.2.4",
    "title": "the application only accepts HTTP/2 and...",
    "description": "Verify that the application only accepts HTTP/2 and HTTP/3 requests where the header fields and values do not contain any CR (\\r), LF (\\n), or CRLF (\\r\\n) sequences, to prevent header injection attacks",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting. Test for SQL injection using various payload techniques."
  },
  {
    "id": "V4.2.5",
    "title": "Verify that, if the application (backend or frontend)...",
    "description": "Verify that, if the application (backend or frontend) builds and sends requests, it uses validation, sanitization, or other mechanisms to avoid creating URIs (such as for API calls) or HTTP request header fields (such as Authorization or Cookie), which are too long to be accepted by the receiving component. This could cause a denial of service, such as when sending an overly long request (e.g., a long cookie header field), which results in the server always responding with an error status",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.3.1",
    "title": "a query allowlist, depth limiting, amount...",
    "description": "Verify that a query allowlist, depth limiting, amount limiting, or query cost analysis is used to prevent GraphQL or data layer expression Denial of Service (DoS) as a result of expensive, nested queries",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.3.2",
    "title": "GraphQL introspection queries are disabled in...",
    "description": "Verify that GraphQL introspection queries are disabled in the production environment unless the GraphQL API is meant to be used by other parties",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.4.1",
    "title": "WebSocket over TLS (WSS) is used...",
    "description": "Verify that WebSocket over TLS (WSS) is used for all WebSocket connections",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.4.2",
    "title": "Verify that, during the initial HTTP WebSocket handshake,...",
    "description": "Verify that, during the initial HTTP WebSocket handshake, the Origin header field is checked against a list of origins allowed for the application",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting."
  },
  {
    "id": "V4.4.3",
    "title": "Verify that, if the application's standard session management...",
    "description": "Verify that, if the application's standard session management cannot be used, dedicated tokens are being used for this, which comply with the relevant Session Management security requirements",
    "category": "API & Web Service Security",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test API security by examining authentication, authorization, input validation, and rate limiting. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V5.1.1",
    "title": "the documentation defines the permitted file...",
    "description": "Verify that the documentation defines the permitted file types, expected file extensions, and maximum size (including unpacked size) for each upload feature. Additionally, ensure that the documentation specifies how files are made safe for end-users to download and process, such as how the application behaves when a malicious file is detected",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.2.1",
    "title": "the application will only accept files...",
    "description": "Verify that the application will only accept files of a size which it can process without causing a loss of performance or a denial of service attack",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.2.2",
    "title": "when the application accepts a file,...",
    "description": "Verify that when the application accepts a file, either on its own or within an archive such as a zip file, it checks if the file extension matches an expected file extension and validates that the contents correspond to the type represented by the extension. This includes, but is not limited to, checking the initial 'magic bytes', performing image re-writing, and using specialized libraries for file content validation. For L1, this can focus just on files which are used to make specific business or security decisions. For L2 and up, this must apply to all files being accepted",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.2.3",
    "title": "the application checks compressed files (e.g.,...",
    "description": "Verify that the application checks compressed files (e.g., zip, gz, docx, odt) against maximum allowed uncompressed size and against maximum number of files before uncompressing the file",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.2.4",
    "title": "a file size quota and maximum...",
    "description": "Verify that a file size quota and maximum number of files per user are enforced to ensure that a single user cannot fill up the storage with too many files, or excessively large files",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.2.5",
    "title": "the application does not allow uploading...",
    "description": "Verify that the application does not allow uploading compressed files containing symlinks unless this is specifically required (in which case it will be necessary to enforce an allowlist of the files that can be symlinked to)",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.2.6",
    "title": "the application rejects uploaded images with...",
    "description": "Verify that the application rejects uploaded images with a pixel size larger than the maximum allowed, to prevent pixel flood attacks",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.3.1",
    "title": "files uploaded or generated by untrusted...",
    "description": "Verify that files uploaded or generated by untrusted input and stored in a public folder, are not executed as server-side program code when accessed directly with an HTTP request",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.3.2",
    "title": "when the application creates file paths...",
    "description": "Verify that when the application creates file paths for file operations, instead of user-submitted filenames, it uses internally generated or trusted data, or if user-submitted filenames or file metadata must be used, strict validation and sanitization must be applied. This is to protect against path traversal, local or remote file inclusion (LFI, RFI), and server-side request forgery (SSRF) attacks",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.3.3",
    "title": "server-side file processing, such as file...",
    "description": "Verify that server-side file processing, such as file decompression, ignores user-provided path information to prevent vulnerabilities such as zip slip",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.4.1",
    "title": "the application validates or ignores user-submitted...",
    "description": "Verify that the application validates or ignores user-submitted filenames, including in a JSON, JSONP, or URL parameter and specifies a filename in the Content-Disposition header field in the response",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V5.4.2",
    "title": "file names served (e.g., in HTTP...",
    "description": "Verify that file names served (e.g., in HTTP response header fields or email attachments) are encoded or sanitized (e.g., following RFC 6266) to preserve document structure and prevent injection attacks",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic. Test for SQL injection using various payload techniques."
  },
  {
    "id": "V5.4.3",
    "title": "files obtained from untrusted sources are...",
    "description": "Verify that files obtained from untrusted sources are scanned by antivirus scanners to prevent serving of known malicious content",
    "category": "File Handling",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test file handling by uploading various file types and examining file processing logic."
  },
  {
    "id": "V6.1.1",
    "title": "application documentation defines how controls such...",
    "description": "Verify that application documentation defines how controls such as rate limiting, anti-automation, and adaptive response, are used to defend against attacks such as credential stuffing and password brute force. The documentation must make clear how these controls are configured and prevent malicious account lockout",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.1.2",
    "title": "a list of context-specific words is...",
    "description": "Verify that a list of context-specific words is documented in order to prevent their use in passwords. The list could include permutations of organization names, product names, system identifiers, project codenames, department or role names, and similar",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.1.3",
    "title": "Verify that, if the application includes multiple authentication...",
    "description": "Verify that, if the application includes multiple authentication pathways, these are all documented together with the security controls and authentication strength which must be consistently enforced across them",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation."
  },
  {
    "id": "V6.2.1",
    "title": "user set passwords are at least...",
    "description": "Verify that user set passwords are at least 8 characters in length although a minimum of 15 characters is strongly recommended",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.2",
    "title": "users can change their password...",
    "description": "Verify that users can change their password",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.3",
    "title": "password change functionality requires the user's...",
    "description": "Verify that password change functionality requires the user's current and new password",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.4",
    "title": "passwords submitted during account registration or...",
    "description": "Verify that passwords submitted during account registration or password change are checked against an available set of, at least, the top 3000 passwords which match the application's password policy, e.g. minimum length",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.5",
    "title": "passwords of any composition can be...",
    "description": "Verify that passwords of any composition can be used, without rules limiting the type of characters permitted. There must be no requirement for a minimum number of upper or lower case characters, numbers, or special characters",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.6",
    "title": "password input fields use type=password to...",
    "description": "Verify that password input fields use type=password to mask the entry. Applications may allow the user to temporarily view the entire masked password, or the last typed character of the password",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.7",
    "title": "\"paste\" functionality, browser password helpers, and...",
    "description": "Verify that \"paste\" functionality, browser password helpers, and external password managers are permitted",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.8",
    "title": "the application verifies the user's password...",
    "description": "Verify that the application verifies the user's password exactly as received from the user, without any modifications such as truncation or case transformation",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.9",
    "title": "passwords of at least 64 characters...",
    "description": "Verify that passwords of at least 64 characters are permitted",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.10",
    "title": "a user's password stays valid until...",
    "description": "Verify that a user's password stays valid until it is discovered to be compromised or the user rotates it. The application must not require periodic credential rotation",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.11",
    "title": "the documented list of context specific...",
    "description": "Verify that the documented list of context specific words is used to prevent easy to guess passwords being created",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V6.2.12",
    "title": "passwords submitted during account registration or...",
    "description": "Verify that passwords submitted during account registration or password changes are checked against a set of breached passwords",
    "category": "Authentication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test authentication mechanisms by attempting various bypass techniques and verifying proper credential validation. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V7.1.1",
    "title": "the user's session inactivity timeout and...",
    "description": "Verify that the user's session inactivity timeout and absolute maximum session lifetime are documented, are appropriate in combination with other controls, and that the documentation includes justification for any deviations from NIST SP 800-63B re-authentication requirements",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities."
  },
  {
    "id": "V7.1.2",
    "title": "the documentation defines how many concurrent...",
    "description": "Verify that the documentation defines how many concurrent (parallel) sessions are allowed for one account as well as the intended behaviors and actions to be taken when the maximum number of active sessions is reached",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities."
  },
  {
    "id": "V7.1.3",
    "title": "all systems that create and manage...",
    "description": "Verify that all systems that create and manage user sessions as part of a federated identity management ecosystem (such as SSO systems) are documented along with controls to coordinate session lifetimes, termination, and any other conditions that require re-authentication",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities."
  },
  {
    "id": "V7.2.1",
    "title": "the application performs all session token...",
    "description": "Verify that the application performs all session token verification using a trusted, backend service",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V7.2.2",
    "title": "the application uses either self-contained or...",
    "description": "Verify that the application uses either self-contained or reference tokens that are dynamically generated for session management, i.e. not using static API secrets and keys",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V7.2.3",
    "title": "if reference tokens are used to...",
    "description": "Verify that if reference tokens are used to represent user sessions, they are unique and generated using a cryptographically secure pseudo-random number generator (CSPRNG) and possess at least 128 bits of entropy",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V7.2.4",
    "title": "the application generates a new session...",
    "description": "Verify that the application generates a new session token on user authentication, including re-authentication, and terminates the current session token",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V7.3.1",
    "title": "there is an inactivity timeout such...",
    "description": "Verify that there is an inactivity timeout such that re-authentication is enforced according to risk analysis and documented security decisions",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities."
  },
  {
    "id": "V7.3.2",
    "title": "there is an absolute maximum session...",
    "description": "Verify that there is an absolute maximum session lifetime such that re-authentication is enforced according to risk analysis and documented security decisions",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities."
  },
  {
    "id": "V7.4.1",
    "title": "when session termination is triggered (such...",
    "description": "Verify that when session termination is triggered (such as logout or expiration), the application disallows any further use of the session. For reference tokens or stateful sessions, this means invalidating the session data at the application backend. Applications using self-contained tokens will need a solution such as maintaining a list of terminated tokens, disallowing tokens produced before a per-user date and time or rotating a per-user signing key",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V7.4.2",
    "title": "the application terminates all active sessions...",
    "description": "Verify that the application terminates all active sessions when a user account is disabled or deleted (such as an employee leaving the company)",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities."
  },
  {
    "id": "V7.4.3",
    "title": "the application gives the option to...",
    "description": "Verify that the application gives the option to terminate all other active sessions after a successful change or removal of any authentication factor (including password change via reset or recovery and, if present, an MFA settings update)",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities. Test password policies, strength requirements, and storage mechanisms."
  },
  {
    "id": "V7.4.4",
    "title": "all pages that require authentication have...",
    "description": "Verify that all pages that require authentication have easy and visible access to logout functionality",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities."
  },
  {
    "id": "V7.4.5",
    "title": "application administrators are able to terminate...",
    "description": "Verify that application administrators are able to terminate active sessions for an individual user or for all users",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities."
  },
  {
    "id": "V7.5.1",
    "title": "the application requires full re-authentication before...",
    "description": "Verify that the application requires full re-authentication before allowing modifications to sensitive account attributes which may affect authentication such as email address, phone number, MFA configuration, or other information used in account recovery",
    "category": "Session Management",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test session handling by examining session tokens, timeout behavior, and session fixation vulnerabilities."
  },
  {
    "id": "V8.1.1",
    "title": "authorization documentation defines rules for restricting...",
    "description": "Verify that authorization documentation defines rules for restricting function-level and data-specific access based on consumer permissions and resource attributes",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V8.1.2",
    "title": "authorization documentation defines rules for field-level...",
    "description": "Verify that authorization documentation defines rules for field-level access restrictions (both read and write) based on consumer permissions and resource attributes. Note that these rules might depend on other attribute values of the relevant data object, such as state or status",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V8.1.3",
    "title": "the application's documentation defines the environmental...",
    "description": "Verify that the application's documentation defines the environmental and contextual attributes (including but not limited to, time of day, user location, IP address, or device) that are used in the application to make security decisions, including those pertaining to authentication and authorization",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V8.1.4",
    "title": "authentication and authorization documentation defines how...",
    "description": "Verify that authentication and authorization documentation defines how environmental and contextual factors are used in decision-making, in addition to function-level, data-specific, and field-level authorization. This should include the attributes evaluated, thresholds for risk, and actions taken (e.g., allow, challenge, deny, step-up authentication)",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V8.2.1",
    "title": "the application ensures that function-level access...",
    "description": "Verify that the application ensures that function-level access is restricted to consumers with explicit permissions",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V8.2.2",
    "title": "the application ensures that data-specific access...",
    "description": "Verify that the application ensures that data-specific access is restricted to consumers with explicit permissions to specific data items to mitigate insecure direct object reference (IDOR) and broken object level authorization (BOLA)",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V8.2.3",
    "title": "the application ensures that field-level access...",
    "description": "Verify that the application ensures that field-level access is restricted to consumers with explicit permissions to specific fields to mitigate broken object property level authorization (BOPLA)",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V8.2.4",
    "title": "adaptive security controls based on a...",
    "description": "Verify that adaptive security controls based on a consumer's environmental and contextual attributes (such as time of day, location, IP address, or device) are implemented for authentication and authorization decisions, as defined in the application's documentation. These controls must be applied when the consumer tries to start a new session and also during an existing session",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V8.3.1",
    "title": "the application enforces authorization rules at...",
    "description": "Verify that the application enforces authorization rules at a trusted service layer and doesn't rely on controls that an untrusted consumer could manipulate, such as client-side JavaScript",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V8.3.2",
    "title": "changes to values on which authorization...",
    "description": "Verify that changes to values on which authorization decisions are made are applied immediately. Where changes cannot be applied immediately, (such as when relying on data in self-contained tokens), there must be mitigating controls to alert when a consumer performs an action when they are no longer authorized to do so and revert the change. Note that this alternative would not mitigate information leakage",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V8.3.3",
    "title": "access to an object is based...",
    "description": "Verify that access to an object is based on the originating subject's (e.g. consumer's) permissions, not on the permissions of any intermediary or service acting on their behalf. For example, if a consumer calls a web service using a self-contained token for authentication, and the service then requests data from a different service, the second service will use the consumer's token, rather than a machine-to-machine token from the first service, to make permission decisions",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V8.4.1",
    "title": "multi-tenant applications use cross-tenant controls to...",
    "description": "Verify that multi-tenant applications use cross-tenant controls to ensure consumer operations will never affect tenants with which they do not have permissions to interact",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V8.4.2",
    "title": "access to administrative interfaces incorporates multiple...",
    "description": "Verify that access to administrative interfaces incorporates multiple layers of security, including continuous consumer identity verification, device security posture assessment, and contextual risk analysis, ensuring that network location or trusted endpoints are not the sole factors for authorization even though they may reduce the likelihood of unauthorized access",
    "category": "Authorization",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test authorization controls by attempting to access resources with different privilege levels."
  },
  {
    "id": "V9.1.1",
    "title": "self-contained tokens are validated using their...",
    "description": "Verify that self-contained tokens are validated using their digital signature or MAC to protect against tampering before accepting the token's contents",
    "category": "Self-contained Tokens",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V9.1.2",
    "title": "only algorithms on an allowlist can...",
    "description": "Verify that only algorithms on an allowlist can be used to create and verify self-contained tokens, for a given context. The allowlist must include the permitted algorithms, ideally only either symmetric or asymmetric algorithms, and must not include the 'None' algorithm. If both symmetric and asymmetric must be supported, additional controls will be needed to prevent key confusion",
    "category": "Self-contained Tokens",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V9.1.3",
    "title": "key material that is used to...",
    "description": "Verify that key material that is used to validate self-contained tokens is from trusted pre-configured sources for the token issuer, preventing attackers from specifying untrusted sources and keys. For JWTs and other JWS structures, headers such as 'jku', 'x5u', and 'jwk' must be validated against an allowlist of trusted sources",
    "category": "Self-contained Tokens",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V9.2.1",
    "title": "Verify that, if a validity time span is...",
    "description": "Verify that, if a validity time span is present in the token data, the token and its content are accepted only if the verification time is within this validity time span. For example, for JWTs, the claims 'nbf' and 'exp' must be verified",
    "category": "Self-contained Tokens",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V9.2.2",
    "title": "the service receiving a token validates...",
    "description": "Verify that the service receiving a token validates the token to be the correct type and is meant for the intended purpose before accepting the token's contents. For example, only access tokens can be accepted for authorization decisions and only ID Tokens can be used for proving user authentication",
    "category": "Self-contained Tokens",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V9.2.3",
    "title": "the service only accepts tokens which...",
    "description": "Verify that the service only accepts tokens which are intended for use with that service (audience). For JWTs, this can be achieved by validating the 'aud' claim against an allowlist defined in the service",
    "category": "Self-contained Tokens",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V9.2.4",
    "title": "Verify that, if a token issuer uses the...",
    "description": "Verify that, if a token issuer uses the same private key for issuing tokens to different audiences, the issued tokens contain an audience restriction that uniquely identifies the intended audiences. This will prevent a token from being reused with an unintended audience. If the audience identifier is dynamically provisioned, the token issuer must validate these audiences in order to make sure that they do not result in audience impersonation",
    "category": "Self-contained Tokens",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.1.1",
    "title": "tokens are only sent to components...",
    "description": "Verify that tokens are only sent to components that strictly need them. For example, when using a backend-for-frontend pattern for browser-based JavaScript applications, access and refresh tokens shall only be accessible for the backend",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.1.2",
    "title": "the client only accepts values from...",
    "description": "Verify that the client only accepts values from the authorization server (such as the authorization code or ID Token) if these values result from an authorization flow that was initiated by the same user agent session and transaction. This requires that client-generated secrets, such as the proof key for code exchange (PKCE) 'code_verifier', 'state' or OIDC 'nonce', are not guessable, are specific to the transaction, and are securely bound to both the client and the user agent session in which the transaction was started",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.2.1",
    "title": "Verify that, if the code flow is used,...",
    "description": "Verify that, if the code flow is used, the OAuth client has protection against browser-based request forgery attacks, commonly known as cross-site request forgery (CSRF), which trigger token requests, either by using proof key for code exchange (PKCE) functionality or checking the 'state' parameter that was sent in the authorization request",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management. Test for XSS vulnerabilities using reflected, stored, and DOM-based techniques."
  },
  {
    "id": "V10.2.2",
    "title": "Verify that, if the OAuth client can interact...",
    "description": "Verify that, if the OAuth client can interact with more than one authorization server, it has a defense against mix-up attacks. For example, it could require that the authorization server return the 'iss' parameter value and validate it in the authorization response and the token response",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.2.3",
    "title": "the OAuth client only requests the...",
    "description": "Verify that the OAuth client only requests the required scopes (or other authorization parameters) in requests to the authorization server",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V10.3.1",
    "title": "the resource server only accepts access...",
    "description": "Verify that the resource server only accepts access tokens that are intended for use with that service (audience). The audience may be included in a structured access token (such as the 'aud' claim in JWT), or it can be checked using the token introspection endpoint",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.3.2",
    "title": "the resource server enforces authorization decisions...",
    "description": "Verify that the resource server enforces authorization decisions based on claims from the access token that define delegated authorization. If claims such as 'sub', 'scope', and 'authorization_details' are present, they must be part of the decision",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.3.3",
    "title": "if an access control decision requires...",
    "description": "Verify that if an access control decision requires identifying a unique user from an access token (JWT or related token introspection response), the resource server identifies the user from claims that cannot be reassigned to other users. Typically, it means using a combination of 'iss' and 'sub' claims",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.3.4",
    "title": "Verify that, if the resource server requires specific...",
    "description": "Verify that, if the resource server requires specific authentication strength, methods, or recentness, it verifies that the presented access token satisfies these constraints. For example, if present, using the OIDC 'acr', 'amr' and 'auth_time' claims respectively",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.3.5",
    "title": "the resource server prevents the use...",
    "description": "Verify that the resource server prevents the use of stolen access tokens or replay of access tokens (from unauthorized parties) by requiring sender-constrained access tokens, either Mutual TLS for OAuth 2 or OAuth 2 Demonstration of Proof of Possession (DPoP)",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.4.1",
    "title": "the authorization server validates redirect URIs...",
    "description": "Verify that the authorization server validates redirect URIs based on a client-specific allowlist of pre-registered URIs using exact string comparison",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V10.4.2",
    "title": "Verify that, if the authorization server returns the...",
    "description": "Verify that, if the authorization server returns the authorization code in the authorization response, it can be used only once for a token request. For the second valid request with an authorization code that has already been used to issue an access token, the authorization server must reject a token request and revoke any issued tokens related to the authorization code",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.4.3",
    "title": "the authorization code is short-lived. The...",
    "description": "Verify that the authorization code is short-lived. The maximum lifetime can be up to 10 minutes for L1 and L2 applications and up to 1 minute for L3 applications",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V10.4.4",
    "title": "for a given client, the authorization...",
    "description": "Verify that for a given client, the authorization server only allows the usage of grants that this client needs to use. Note that the grants 'token' (Implicit flow) and 'password' (Resource Owner Password Credentials flow) must no longer be used",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods. Test password policies, strength requirements, and storage mechanisms. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V10.4.5",
    "title": "the authorization server mitigates refresh token...",
    "description": "Verify that the authorization server mitigates refresh token replay attacks for public clients, preferably using sender-constrained refresh tokens, i.e., Demonstrating Proof of Possession (DPoP) or Certificate-Bound Access Tokens using mutual TLS (mTLS). For L1 and L2 applications, refresh token rotation may be used. If refresh token rotation is used, the authorization server must invalidate the refresh token after usage, and revoke all refresh tokens for that authorization if an already used and invalidated refresh token is provided",
    "category": "OAuth & OIDC",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V11.1.1",
    "title": "there is a documented policy for...",
    "description": "Verify that there is a documented policy for management of cryptographic keys and a cryptographic key lifecycle that follows a key management standard such as NIST SP 800-57. This should include ensuring that keys are not overshared (for example, with more than two entities for shared secrets and more than one entity for private keys)",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation."
  },
  {
    "id": "V11.1.2",
    "title": "a cryptographic inventory is performed, maintained,...",
    "description": "Verify that a cryptographic inventory is performed, maintained, regularly updated, and includes all cryptographic keys, algorithms, and certificates used by the application. It must also document where keys can and cannot be used in the system, and the types of data that can and cannot be protected using the keys",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation."
  },
  {
    "id": "V11.1.3",
    "title": "cryptographic discovery mechanisms are employed to...",
    "description": "Verify that cryptographic discovery mechanisms are employed to identify all instances of cryptography in the system, including encryption, hashing, and signing operations",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation. Verify encryption algorithms, key sizes, and implementation correctness."
  },
  {
    "id": "V11.1.4",
    "title": "a cryptographic inventory is maintained. This...",
    "description": "Verify that a cryptographic inventory is maintained. This must include a documented plan that outlines the migration path to new cryptographic standards, such as post-quantum cryptography, in order to react to future threats",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation."
  },
  {
    "id": "V11.2.1",
    "title": "industry-validated implementations (including libraries and hardware-accelerated...",
    "description": "Verify that industry-validated implementations (including libraries and hardware-accelerated implementations) are used for cryptographic operations",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation."
  },
  {
    "id": "V11.2.2",
    "title": "the application is designed with crypto...",
    "description": "Verify that the application is designed with crypto agility such that random number, authenticated encryption, MAC, or hashing algorithms, key lengths, rounds, ciphers and modes can be reconfigured, upgraded, or swapped at any time, to protect against cryptographic breaks. Similarly, it must also be possible to replace keys and passwords and re-encrypt data. This will allow for seamless upgrades to post-quantum cryptography (PQC), once high-assurance implementations of approved PQC schemes or standards are widely available",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation. Test password policies, strength requirements, and storage mechanisms. Verify encryption algorithms, key sizes, and implementation correctness."
  },
  {
    "id": "V11.2.3",
    "title": "all cryptographic primitives utilize a minimum...",
    "description": "Verify that all cryptographic primitives utilize a minimum of 128-bits of security based on the algorithm, key size, and configuration. For example, a 256-bit ECC key provides roughly 128 bits of security where RSA requires a 3072-bit key to achieve 128 bits of security",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation."
  },
  {
    "id": "V11.2.4",
    "title": "all cryptographic operations are constant-time, with...",
    "description": "Verify that all cryptographic operations are constant-time, with no 'short-circuit' operations in comparisons, calculations, or returns, to avoid leaking information",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation."
  },
  {
    "id": "V11.2.5",
    "title": "all cryptographic modules fail securely, and...",
    "description": "Verify that all cryptographic modules fail securely, and errors are handled in a way that does not enable vulnerabilities, such as Padding Oracle attacks",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation."
  },
  {
    "id": "V11.3.1",
    "title": "insecure block modes (e.g., ECB) and...",
    "description": "Verify that insecure block modes (e.g., ECB) and weak padding schemes (e.g., PKCS#1 v1.5) are not used",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation."
  },
  {
    "id": "V11.3.2",
    "title": "only approved ciphers and modes such...",
    "description": "Verify that only approved ciphers and modes such as AES with GCM are used",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation."
  },
  {
    "id": "V11.3.3",
    "title": "encrypted data is protected against unauthorized...",
    "description": "Verify that encrypted data is protected against unauthorized modification preferably by using an approved authenticated encryption method or by combining an approved encryption method with an approved MAC algorithm",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation. Verify encryption algorithms, key sizes, and implementation correctness."
  },
  {
    "id": "V11.3.4",
    "title": "nonces, initialization vectors, and other single-use...",
    "description": "Verify that nonces, initialization vectors, and other single-use numbers are not used for more than one encryption key and data-element pair. The method of generation must be appropriate for the algorithm being used",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation. Verify encryption algorithms, key sizes, and implementation correctness."
  },
  {
    "id": "V11.3.5",
    "title": "any combination of an encryption algorithm...",
    "description": "Verify that any combination of an encryption algorithm and a MAC algorithm is operating in encrypt-then-MAC mode",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation. Verify encryption algorithms, key sizes, and implementation correctness."
  },
  {
    "id": "V11.4.1",
    "title": "only approved hash functions are used...",
    "description": "Verify that only approved hash functions are used for general cryptographic use cases, including digital signatures, HMAC, KDF, and random bit generation. Disallowed hash functions, such as MD5, must not be used for any cryptographic purpose",
    "category": "Cryptography",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test cryptographic implementation by examining algorithms, key management, and random number generation."
  },
  {
    "id": "V12.1.1",
    "title": "only the latest recommended versions of...",
    "description": "Verify that only the latest recommended versions of the TLS protocol are enabled, such as TLS 1.2 and TLS 1.3. The latest version of the TLS protocol must be the preferred option",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V12.1.2",
    "title": "only recommended cipher suites are enabled,...",
    "description": "Verify that only recommended cipher suites are enabled, with the strongest cipher suites set as preferred. L3 applications must only support cipher suites which provide forward secrecy",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V12.1.3",
    "title": "the application validates that mTLS client...",
    "description": "Verify that the application validates that mTLS client certificates are trusted before using the certificate identity for authentication or authorization",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V12.1.4",
    "title": "proper certification revocation, such as Online...",
    "description": "Verify that proper certification revocation, such as Online Certificate Status Protocol (OCSP) Stapling, is enabled and configured",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V12.1.5",
    "title": "Encrypted Client Hello (ECH) is enabled...",
    "description": "Verify that Encrypted Client Hello (ECH) is enabled in the application's TLS settings to prevent exposure of sensitive metadata, such as the Server Name Indication (SNI), during TLS handshake processes",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V12.2.1",
    "title": "TLS is used for all connectivity...",
    "description": "Verify that TLS is used for all connectivity between a client and external facing, HTTP-based services, and does not fall back to insecure or unencrypted communications",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V12.2.2",
    "title": "external facing services use publicly trusted...",
    "description": "Verify that external facing services use publicly trusted TLS certificates",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V12.3.1",
    "title": "an encrypted protocol such as TLS...",
    "description": "Verify that an encrypted protocol such as TLS is used for all inbound and outbound connections to and from the application, including monitoring systems, management tools, remote access and SSH, middleware, databases, mainframes, partner systems, or external APIs. The server must not fall back to insecure or unencrypted protocols",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V12.3.2",
    "title": "TLS clients validate certificates received before...",
    "description": "Verify that TLS clients validate certificates received before communicating with a TLS server",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V12.3.3",
    "title": "TLS or another appropriate transport encryption...",
    "description": "Verify that TLS or another appropriate transport encryption mechanism used for all connectivity between internal, HTTP-based services within the application, and does not fall back to insecure or unencrypted communications",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods. Verify encryption algorithms, key sizes, and implementation correctness."
  },
  {
    "id": "V12.3.4",
    "title": "TLS connections between internal services use...",
    "description": "Verify that TLS connections between internal services use trusted certificates. Where internally generated or self-signed certificates are used, the consuming service must be configured to only trust specific internal CAs and specific self-signed certificates",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V12.3.5",
    "title": "services communicating internally within a system...",
    "description": "Verify that services communicating internally within a system (intra-service communications) use strong authentication to ensure that each endpoint is verified. Strong authentication methods, such as TLS client authentication, must be employed to ensure identity, using public-key infrastructure and mechanisms that are resistant to replay attacks. For microservice architectures, consider using a service mesh to simplify certificate management and enhance security",
    "category": "Secure Communication",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test the security control through appropriate verification methods."
  },
  {
    "id": "V13.1.1",
    "title": "all communication needs for the application...",
    "description": "Verify that all communication needs for the application are documented. This must include external services which the application relies upon and cases where an end user might be able to provide an external location to which the application will then connect",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.1.2",
    "title": "for each service the application uses,...",
    "description": "Verify that for each service the application uses, the documentation defines the maximum number of concurrent connections (e.g., connection pool limits) and how the application behaves when that limit is reached, including any fallback or recovery mechanisms, to prevent denial of service conditions",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.1.3",
    "title": "the application documentation defines resource‑management strategies...",
    "description": "Verify that the application documentation defines resource‑management strategies for every external system or service it uses (e.g., databases, file handles, threads, HTTP connections). This should include resource‑release procedures, timeout settings, failure handling, and where retry logic is implemented, specifying retry limits, delays, and back‑off algorithms. For synchronous HTTP request–response operations it should mandate short timeouts and either disable retries or strictly limit retries to prevent cascading delays and resource exhaustion",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.1.4",
    "title": "the application's documentation defines the secrets...",
    "description": "Verify that the application's documentation defines the secrets that are critical for the security of the application and a schedule for rotating them, based on the organization's threat model and business requirements",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.2.1",
    "title": "communications between backend application components that...",
    "description": "Verify that communications between backend application components that don't support the application's standard user session mechanism, including APIs, middleware, and data layers, are authenticated. Authentication must use individual service accounts, short-term tokens, or certificate-based authentication and not unchanging credentials such as passwords, API keys, or shared accounts with privileged access",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces. Test password policies, strength requirements, and storage mechanisms. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V13.2.2",
    "title": "communications between backend application components, including...",
    "description": "Verify that communications between backend application components, including local or operating system services, APIs, middleware, and data layers, are performed with accounts assigned the least necessary privileges",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.2.3",
    "title": "if a credential has to be...",
    "description": "Verify that if a credential has to be used for service authentication, the credential being used by the consumer is not a default credential (e.g., root/root or admin/admin)",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.2.4",
    "title": "an allowlist is used to define...",
    "description": "Verify that an allowlist is used to define the external resources or systems with which the application is permitted to communicate (e.g., for outbound requests, data loads, or file access). This allowlist can be implemented at the application layer, web server, firewall, or a combination of different layers",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.2.5",
    "title": "the web or application server is...",
    "description": "Verify that the web or application server is configured with an allowlist of resources or systems to which the server can send requests or load data or files from",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.2.6",
    "title": "where the application connects to separate...",
    "description": "Verify that where the application connects to separate services, it follows the documented configuration for each connection, such as maximum parallel connections, behavior when maximum allowed connections is reached, connection timeouts, and retry strategies",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.3.1",
    "title": "a secrets management solution, such as...",
    "description": "Verify that a secrets management solution, such as a key vault, is used to securely create, store, control access to, and destroy backend secrets. These could include passwords, key material, integrations with databases and third-party systems, keys and seeds for time-based tokens, other internal secrets, and API keys. Secrets must not be included in application source code or included in build artifacts. For an L3 application, this must involve a hardware-backed solution such as an HSM",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces. Test password policies, strength requirements, and storage mechanisms. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V13.3.2",
    "title": "access to secret assets adheres to...",
    "description": "Verify that access to secret assets adheres to the principle of least privilege",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.3.3",
    "title": "all cryptographic operations are performed using...",
    "description": "Verify that all cryptographic operations are performed using an isolated security module (such as a vault or hardware security module) to securely manage and protect key material from exposure outside of the security module",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.3.4",
    "title": "secrets are configured to expire and...",
    "description": "Verify that secrets are configured to expire and be rotated based on the application's documentation",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V13.4.1",
    "title": "the application is deployed either without...",
    "description": "Verify that the application is deployed either without any source control metadata, including the .git or .svn folders, or in a way that these folders are inaccessible both externally and to the application itself",
    "category": "Configuration",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test configuration security by examining default settings, error messages, and administrative interfaces."
  },
  {
    "id": "V14.1.1",
    "title": "all sensitive data created and processed...",
    "description": "Verify that all sensitive data created and processed by the application has been identified and classified into protection levels. This includes data that is only encoded and therefore easily decoded, such as Base64 strings or the plaintext payload inside a JWT. Protection levels need to take into account any data protection and privacy regulations and standards which the application is required to comply with",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls."
  },
  {
    "id": "V14.1.2",
    "title": "all sensitive data protection levels have...",
    "description": "Verify that all sensitive data protection levels have a documented set of protection requirements. This must include (but not be limited to) requirements related to general encryption, integrity verification, retention, how the data is to be logged, access controls around sensitive data in logs, database-level encryption, privacy and privacy-enhancing technologies to be used, and other confidentiality requirements",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls. Verify encryption algorithms, key sizes, and implementation correctness."
  },
  {
    "id": "V14.2.1",
    "title": "sensitive data is only sent to...",
    "description": "Verify that sensitive data is only sent to the server in the HTTP message body or header fields, and that the URL and query string do not contain sensitive information, such as an API key or session token",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls. Examine token generation, validation, and lifecycle management."
  },
  {
    "id": "V14.2.2",
    "title": "the application prevents sensitive data from...",
    "description": "Verify that the application prevents sensitive data from being cached in server components, such as load balancers and application caches, or ensures that the data is securely purged after use",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls."
  },
  {
    "id": "V14.2.3",
    "title": "defined sensitive data is not sent...",
    "description": "Verify that defined sensitive data is not sent to untrusted parties (e.g., user trackers) to prevent unwanted collection of data outside of the application's control",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls."
  },
  {
    "id": "V14.2.4",
    "title": "controls around sensitive data related to...",
    "description": "Verify that controls around sensitive data related to encryption, integrity verification, retention, how the data is to be logged, access controls around sensitive data in logs, privacy and privacy-enhancing technologies, are implemented as defined in the documentation for the specific data's protection level",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls. Verify encryption algorithms, key sizes, and implementation correctness."
  },
  {
    "id": "V14.2.5",
    "title": "caching mechanisms are configured to only...",
    "description": "Verify that caching mechanisms are configured to only cache responses which have the expected content type for that resource and do not contain sensitive, dynamic content. The web server should return a 404 or 302 response when a non-existent file is accessed rather than returning a different, valid file. This should prevent Web Cache Deception attacks",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls."
  },
  {
    "id": "V14.2.6",
    "title": "the application only returns the minimum...",
    "description": "Verify that the application only returns the minimum required sensitive data for the application's functionality. For example, only returning some of the digits of a credit card number and not the full number. If the complete data is required, it should be masked in the user interface unless the user specifically views it",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls."
  },
  {
    "id": "V14.2.7",
    "title": "sensitive information is subject to data...",
    "description": "Verify that sensitive information is subject to data retention classification, ensuring that outdated or unnecessary data is deleted automatically, on a defined schedule, or as the situation requires",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls."
  },
  {
    "id": "V14.2.8",
    "title": "sensitive information is removed from the...",
    "description": "Verify that sensitive information is removed from the metadata of user-submitted files unless storage is consented to by the user",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "high",
    "level": "3",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls."
  },
  {
    "id": "V14.3.1",
    "title": "authenticated data is cleared from client...",
    "description": "Verify that authenticated data is cleared from client storage, such as the browser DOM, after the client or session is terminated. The 'Clear-Site-Data' HTTP response header field may be able to help with this but the client-side should also be able to clear up if the server connection is not available when the session is terminated",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "low",
    "level": "1",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls."
  },
  {
    "id": "V14.3.2",
    "title": "the application sets sufficient anti-caching HTTP...",
    "description": "Verify that the application sets sufficient anti-caching HTTP response header fields (i.e., Cache-Control: no-store) so that sensitive data is not cached in browsers",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls."
  },
  {
    "id": "V14.3.3",
    "title": "data stored in browser storage (such...",
    "description": "Verify that data stored in browser storage (such as localStorage, sessionStorage, IndexedDB, or cookies) does not contain sensitive data, with the exception of session tokens",
    "category": "Data Protection",
    "levels": [
      "L1"
    ],
    "risk_level": "medium",
    "level": "2",
    "testing_guidance": "Test data protection by examining data storage, transmission, and access controls. Examine token generation, validation, and lifecycle management."
  }
]